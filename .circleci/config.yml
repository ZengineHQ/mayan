version: 2
jobs:

  test-node-latest:
    docker:
      - image: circleci/node
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - node-latest-dependencies-{{ checksum "package.json" }}
      - run:
          name: Instal NPM modules
          command: npm install
      - run:
          name: Audit NPM modules
          command: npm audit || true
      - save_cache:
          paths:
            - node_modules
          key: node-latest-dependencies-{{ checksum "package.json" }}
      # - run: mkdir ~/junit
      - run:
          name: Check code styling (lint)
          command: npm run eslint
      - run:
          name: Run tests
          command: npm run test
      # - store_test_results:
      #     path: ~/junit
      # - store_artifacts:
      #     path: ~/junit

  test-node-12:
    docker:
      - image: circleci/node:12
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - node-12-dependencies-{{ checksum "package.json" }}
      - run:
          name: Install NPM modules
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: node-12-dependencies-{{ checksum "package.json" }}
      # - run: mkdir ~/junit
      - run:
          name: Check code styling (lint)
          command: npm run eslint
      - run:
          name: Run tests
          command: npm run test
      # - store_test_results:
      #     path: ~/junit
      # - store_artifacts:
      #     path: ~/junit

  test-node-10:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - node-10-dependencies-{{ checksum "package.json" }}
      - run:
          name: Install NPM modules
          command: npm install
      - run:
          name: Audit NPM modules
          command: npm audit || true
      - save_cache:
          paths:
            - node_modules
          key: node-10-dependencies-{{ checksum "package.json" }}
      # - run: mkdir ~/junit
      - run:
          name: Check code styling (lint)
          command: npm run eslint
      - run:
          name: Run tests
          command: npm run test
      # - store_test_results:
      #     path: ~/junit
      # - store_artifacts:
      #     path: ~/junit

  integration-tests:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Setup NPM bin
          command: |
            mkdir -p ~/.npm-global/bin
            npm config set prefix '~/.npm-global'
            echo 'export PATH=~/.npm-global/bin:$PATH' >> $BASH_ENV
      - run:
          name: Install NPM modules
          command: |
            npm install
            npm rebuild node-sass
            npm link
      - run:
          name: Create maya.json
          command: |
            cd test/integration/test-plugin
            echo 'export PATH="$GOPATH/bin:$PATH"' >> $BASH_ENV
            cp maya.example.json maya.json
            sed -i 's@{{API_TOKEN}}@'"$ZENGINE_API_TOKEN"'@' maya.json
      - run:
          name: Test mayan help
          command: |
            mayan --help
      # - run:
      #     name: Test mayan show hidden options
      #     command: |
      #       mayan --show-hidden
      - run:
          name: Test mayan build
          command: |
            cd test/integration/test-plugin
            mayan build --env stage
      - run:
          name: Test mayan deploy
          command: |
            if [ -n "$ZENGINE_API_TOKEN" ]; then
              cd test/integration/test-plugin
              mayan deploy --env stage
            fi
      - run:
          name: Test mayan publish
          command: |
            if [ -n "$ZENGINE_API_TOKEN" ]; then
              cd test/integration/test-plugin
              mayan publish --env stage --yes
            fi

workflows:
  version: 2
  test:
    jobs:
      - test-node-latest
      - test-node-10
      - test-node-12
      - integration-tests
