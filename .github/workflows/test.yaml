name: Lint, Format and Test a Feature Branch

on:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  mayan-tests:
    strategy:
      matrix:
        node_version:
          - latest
          - 20
          - 16
          - 12
          - 10
    runs-on: ubuntu-latest
    # runs-on: node:${{ matrix.node_version }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node version
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}
          # node-version: 16.13.2
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install npm dependancies
        run: npm install

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        with:
          path: |
            node_modules/
          key: ${{ runner.os }}-build-${{ matrix.node_version }}-${{ hashFiles('**/npm-shrinkwrap.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ matrix.node_version }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Code check styling (lint)
        run: npm run eslint

      - name: Run Tests
        run: npm run test

  mayan-integration-tests:
    runs-on: ubuntu-latest
    needs:
      - mayan-tests
    env:
      ZENGINE_API_TOKEN: ${{ secrets.zengine_api_token }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node version
        uses: actions/setup-node@v3
        with:
          node-version: latest
          # node-version: 16.13.2
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install npm dependancies
        run: npm install

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        with:
          path: |
            node_modules/
          key: ${{ runner.os }}-build-latest-${{ hashFiles('**/npm-shrinkwrap.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ matrix.node_version }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Create maya.json
        run: |
          cd test/integration/test-plugin
          echo 'export PATH="$GOPATH/bin:$PATH"' >> $BASH_ENV
          cp maya.example.json maya.json
          sed -i 's@{{API_TOKEN}}@'"$ZENGINE_API_TOKEN"'@' maya.json

    - name: Test Mayan help command
      run: mayan --help

    - name: Test Mayan build plugin
      run: |
        cd test/integration/test-plugin
        mayan build --env stage

    - name: Test Mayan deploy plugin
      run: |
        if [ -z "$ZENGINE_API_TOKEN" ]; then
          echo 'missing zengine deploy key'
          exit 1
        fi

        cd test/integration/test-plugin
        mayan deploy --env stage
        
    - name: Test Mayan publish plugin
      run: |
        if [ -z "$ZENGINE_API_TOKEN" ]; then
          echo 'missing zengine deploy key'
          exit 1
        fi
        
        cd test/integration/test-plugin
        mayan publish --env stage --yes
